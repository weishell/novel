<mxfile host="app.diagrams.net" modified="2022-08-28T03:26:00.458Z" agent="5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.0.0 Safari/537.36" etag="wp7oLzzDiJlqsOlYOypu" version="20.2.7" type="github">
  <diagram name="Page-1" id="c7558073-3199-34d8-9f00-42111426c3f3">
    <mxGraphModel dx="1038" dy="1708" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="826" pageHeight="1169" background="none" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="2" value="&lt;p style=&quot;margin: 4px 0px 0px;&quot;&gt;&lt;u&gt;// 初始化一个应用的方式如下&lt;/u&gt;&lt;/p&gt;&lt;p style=&quot;margin: 4px 0px 0px;&quot;&gt;&lt;u&gt;&lt;br&gt;&lt;/u&gt;&lt;/p&gt;&lt;p style=&quot;margin: 4px 0px 0px;&quot;&gt;&lt;u&gt;import { createApp } from &#39;vue&#39;&lt;/u&gt;&lt;/p&gt;&lt;p style=&quot;margin: 4px 0px 0px;&quot;&gt;&lt;u&gt;&lt;br&gt;&lt;/u&gt;&lt;/p&gt;&lt;p style=&quot;margin: 4px 0px 0px;&quot;&gt;&lt;u&gt;import App from &#39;./app&#39;&lt;/u&gt;&lt;/p&gt;&lt;p style=&quot;margin: 4px 0px 0px;&quot;&gt;&lt;u&gt;&lt;br&gt;&lt;/u&gt;&lt;/p&gt;&lt;p style=&quot;margin: 4px 0px 0px;&quot;&gt;&lt;u&gt;const app = &lt;font color=&quot;#ff0080&quot;&gt;createApp(App)&lt;/font&gt;&lt;/u&gt;&lt;/p&gt;&lt;p style=&quot;margin: 4px 0px 0px;&quot;&gt;&lt;u&gt;&lt;br&gt;&lt;/u&gt;&lt;/p&gt;&lt;p style=&quot;margin: 4px 0px 0px;&quot;&gt;&lt;u&gt;app.mount(&#39;#app&#39;)&lt;/u&gt;&lt;/p&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="verticalAlign=middle;align=center;overflow=fill;fontSize=12;fontFamily=Helvetica;html=1;rounded=1;fontStyle=1;strokeWidth=3;fillColor=#E6FFCC" parent="1" vertex="1">
          <mxGeometry x="184" y="140" width="276" height="176" as="geometry" />
        </mxCell>
        <object label="Vue3" id="5">
          <mxCell style="shape=process;whiteSpace=wrap;align=center;verticalAlign=middle;size=0.0475;fontStyle=1;strokeWidth=3;fillColor=#FFCCCC" parent="1" vertex="1">
            <mxGeometry x="201" y="391" width="249" height="50" as="geometry" />
          </mxCell>
        </object>
        <mxCell id="56" value="" style="edgeStyle=elbowEdgeStyle;elbow=horizontal;strokeColor=#990000;strokeWidth=2" parent="1" source="2" target="5" edge="1">
          <mxGeometry width="100" height="100" relative="1" as="geometry">
            <mxPoint x="50" y="500" as="sourcePoint" />
            <mxPoint x="150" y="400" as="targetPoint" />
            <Array as="points">
              <mxPoint x="320" y="330" />
              <mxPoint x="290" y="350" />
              <mxPoint x="280" y="360" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="57" value="创建实例" style="text;spacingTop=-5;align=center" parent="1" vertex="1">
          <mxGeometry x="306" y="341" width="30" height="20" as="geometry" />
        </mxCell>
        <mxCell id="p2N06ffcsC0MJF7vxpci-98" value="&lt;div style=&quot;text-align: left;&quot;&gt;&lt;b&gt;const &lt;font color=&quot;#cc0066&quot;&gt;createApp&lt;/font&gt; = ((...args) =&amp;gt; {&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;b&gt;&lt;font color=&quot;#0000cc&quot;&gt;&amp;nbsp; &lt;/font&gt;&lt;font color=&quot;#0000ff&quot;&gt;// 创建 app 对象&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;b&gt;&amp;nbsp; const app = &lt;font color=&quot;#cc0066&quot;&gt;ensureRenderer&lt;/font&gt;().createApp(...args)&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;b&gt;&amp;nbsp; const { mount } = app&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;b&gt;&amp;nbsp;&lt;font color=&quot;#0000ff&quot;&gt; // 重写 mount 方法&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;b&gt;&amp;nbsp; &lt;font color=&quot;#cc0066&quot;&gt;app.mount&lt;/font&gt; = (containerOrSelector) =&amp;gt; {&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; // ...&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;b&gt;&amp;nbsp; }&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;b&gt;&amp;nbsp; return app&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;b&gt;})&lt;/b&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="510" y="30" width="340" height="320" as="geometry" />
        </mxCell>
        <mxCell id="p2N06ffcsC0MJF7vxpci-100" value="" style="endArrow=classic;html=1;rounded=0;fontColor=#000000;jumpSize=4;" edge="1" parent="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="460" y="230" as="sourcePoint" />
            <mxPoint x="510" y="180" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="p2N06ffcsC0MJF7vxpci-102" value="&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;b&gt;// 渲染相关的一些配置，比如更新属性的方法，操作 DOM 的方法&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;b&gt;const rendererOptions = {...&lt;/b&gt;&lt;/font&gt;&lt;b style=&quot;background-color: initial;&quot;&gt;}&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;b&gt;let renderer&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;b&gt;// 延时创建渲染器，当用户只依赖响应式包的时候，可以通过 tree-shaking 移除核心渲染逻辑相关的代码&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;b&gt;function ensureRenderer() {&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;b&gt;&amp;nbsp; return renderer || (renderer = createRenderer(rendererOptions))&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;b&gt;}&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;b&gt;function createRenderer(options) {&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;b&gt;&amp;nbsp; return baseCreateRenderer(options)&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;b&gt;}&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;b style=&quot;&quot;&gt;function &lt;font color=&quot;#cc0066&quot;&gt;baseCreateRenderer&lt;/font&gt;(options) {&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b style=&quot;&quot;&gt;&amp;nbsp; function &lt;font color=&quot;#cc0066&quot;&gt;render&lt;/font&gt;(vnode, container) {&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp;&lt;font color=&quot;#0000ff&quot;&gt; // 组件渲染的核心逻辑&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;b&gt;&amp;nbsp; }&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;b&gt;&amp;nbsp; return {&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; render,&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;b style=&quot;&quot;&gt;&amp;nbsp; &amp;nbsp; createApp: &lt;font color=&quot;#cc0066&quot;&gt;createAppAPI&lt;/font&gt;(render)&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;b&gt;&amp;nbsp; }&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;b&gt;}&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="whiteSpace=wrap;html=1;aspect=fixed;align=left;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="980" y="-10" width="370" height="370" as="geometry" />
        </mxCell>
        <mxCell id="p2N06ffcsC0MJF7vxpci-103" value="" style="endArrow=classic;html=1;rounded=0;fontColor=#CC0066;jumpSize=4;entryX=0;entryY=0.5;entryDx=0;entryDy=0;startArrow=none;" edge="1" parent="1" source="p2N06ffcsC0MJF7vxpci-105" target="p2N06ffcsC0MJF7vxpci-102">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="850" y="150" as="sourcePoint" />
            <mxPoint x="900" y="100" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="p2N06ffcsC0MJF7vxpci-105" value="&lt;b style=&quot;text-align: left;&quot;&gt;&lt;font color=&quot;#cc0000&quot;&gt;ensureRenderer&lt;/font&gt;&lt;/b&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontColor=#0000FF;" vertex="1" parent="1">
          <mxGeometry x="900" y="150" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="p2N06ffcsC0MJF7vxpci-106" value="" style="endArrow=none;html=1;rounded=0;fontColor=#CC0066;jumpSize=4;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" edge="1" parent="1" target="p2N06ffcsC0MJF7vxpci-105">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="850" y="150" as="sourcePoint" />
            <mxPoint x="960" y="228" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="p2N06ffcsC0MJF7vxpci-107" value="&lt;div style=&quot;text-align: left;&quot;&gt;&lt;font style=&quot;&quot;&gt;&lt;b style=&quot;&quot;&gt;function &lt;font color=&quot;#cc0066&quot;&gt;createAppAPI&lt;/font&gt;(render) {&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); text-align: left;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;b&gt;&amp;nbsp; // createApp createApp 方法接受的两个参数：根组件的对象和 prop&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); text-align: left;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;b&gt;&amp;nbsp; return function createApp(rootComponent, rootProps = null) {&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); text-align: left;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; const app = {&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); text-align: left;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; _component: rootComponent,&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); text-align: left;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; _props: rootProps,&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); text-align: left;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; mount(rootContainer) {&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); text-align: left;&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;font color=&quot;#0000ff&quot;&gt;&amp;nbsp;// 创建根组件的 vnode&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); text-align: left;&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;font color=&quot;#cc0066&quot;&gt;&amp;nbsp; const vnode = createVNode(rootComponent, rootProps)&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); text-align: left;&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;font color=&quot;#0000ff&quot;&gt;&amp;nbsp;// 利用渲染器渲染 vnode&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); text-align: left;&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;font color=&quot;#cc0066&quot;&gt;render(vnode, rootContainer)&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); text-align: left;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; app._container = rootContainer&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); text-align: left;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return vnode.component.proxy&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); text-align: left;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); text-align: left;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); text-align: left;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; }&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); text-align: left;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; return app&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); text-align: left;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;b&gt;&amp;nbsp; }&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); text-align: left;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;color: rgb(0, 0, 0); text-align: left;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;b&gt;}&lt;/b&gt;&lt;/font&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="1450" y="-5" width="380" height="340" as="geometry" />
        </mxCell>
        <mxCell id="p2N06ffcsC0MJF7vxpci-110" value="" style="endArrow=classic;startArrow=classic;html=1;rounded=0;fontColor=#CC0066;jumpSize=4;" edge="1" parent="1" target="p2N06ffcsC0MJF7vxpci-107">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="1350" y="170" as="sourcePoint" />
            <mxPoint x="1400" y="120" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="p2N06ffcsC0MJF7vxpci-111" value="&lt;div&gt;&lt;b&gt;app.mount = (containerOrSelector) =&amp;gt; {&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; // 标准化容器&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; const container = normalizeContainer(containerOrSelector)&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp;......&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; const component = app._component&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp;// 如组件对象没定义 render 函数和 template ，取容器的 innerHTML 作为组件模板内容&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; if (!isFunction(component) &amp;amp;&amp;amp; !component.render &amp;amp;&amp;amp; !component.template) {&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; component.template = container.innerHTML&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; }&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; // 挂载前清空容器内容&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; container.innerHTML = &#39;&#39;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; // 真正的挂载,调用createAppApi里的mount&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; return &lt;font color=&quot;#cc0066&quot;&gt;mount&lt;/font&gt;(container)&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;}&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#fff2cc;strokeColor=#d6b656;align=left;" vertex="1" parent="1">
          <mxGeometry x="510" y="-430" width="490" height="390" as="geometry" />
        </mxCell>
        <mxCell id="p2N06ffcsC0MJF7vxpci-112" value="" style="endArrow=classic;startArrow=classic;html=1;rounded=0;fontColor=#CC0066;jumpSize=4;entryX=0.551;entryY=1;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="761" y="30" as="sourcePoint" />
            <mxPoint x="760.99" y="-40" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="p2N06ffcsC0MJF7vxpci-113" value="&lt;b&gt;&lt;font color=&quot;#cc0000&quot;&gt;createAppApi&lt;/font&gt;&lt;/b&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontColor=#CC0066;" vertex="1" parent="1">
          <mxGeometry x="1370" y="130" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="p2N06ffcsC0MJF7vxpci-114" value="&lt;b&gt;重写app.mount&lt;/b&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontColor=#CC0000;" vertex="1" parent="1">
          <mxGeometry x="760" y="-20" width="70" height="30" as="geometry" />
        </mxCell>
        <mxCell id="p2N06ffcsC0MJF7vxpci-119" value="" style="endArrow=none;dashed=1;html=1;rounded=0;fontColor=#CC0066;jumpSize=4;entryX=-0.006;entryY=0.022;entryDx=0;entryDy=0;entryPerimeter=0;" edge="1" parent="1" target="p2N06ffcsC0MJF7vxpci-107">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="1000" y="-130" as="sourcePoint" />
            <mxPoint x="1050" y="-180" as="targetPoint" />
            <Array as="points">
              <mxPoint x="1260" y="-120" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="p2N06ffcsC0MJF7vxpci-121" value="&lt;b&gt;&lt;font color=&quot;#cc0000&quot;&gt;mount重写之后再调用最初的&lt;/font&gt;&lt;/b&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontColor=#CC0066;" vertex="1" parent="1">
          <mxGeometry x="1220" y="-140" width="100" height="30" as="geometry" />
        </mxCell>
        <mxCell id="p2N06ffcsC0MJF7vxpci-122" value="&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#000000&quot;&gt;function &lt;/font&gt;&lt;font color=&quot;#cc0066&quot;&gt;createVNode&lt;/font&gt;&lt;font color=&quot;#000000&quot;&gt;(type, props = null&lt;/font&gt;&lt;/b&gt;&lt;b style=&quot;background-color: initial;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;,children = null) {&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; if (props) {&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; // 处理 props 相关逻辑，标准化 class 和 style&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; }&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; // 对 vnode 类型信息编码&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; const shapeFlag = isString(type)&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; ? 1 /* ELEMENT */&amp;nbsp;&lt;/font&gt;&lt;/b&gt;&lt;b style=&quot;background-color: initial;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;: isSuspense(type)&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; ? 128 /* SUSPENSE */&amp;nbsp;&lt;/font&gt;&lt;/b&gt;&lt;b style=&quot;background-color: initial;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;: isTeleport(type)&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; ? 64 /* TELEPORT */&amp;nbsp;&amp;nbsp;&lt;/font&gt;&lt;/b&gt;&lt;b style=&quot;background-color: initial;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;: isObject(type)&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b style=&quot;background-color: initial;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; ? 4 /* STATEFUL_COMPONENT */&lt;/font&gt;&lt;/b&gt;&lt;b style=&quot;background-color: initial;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;: isFunction(type)&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; ? 2 /* FUNCTIONAL_COMPONENT */&amp;nbsp;&lt;/font&gt;&lt;/b&gt;&lt;b style=&quot;background-color: initial;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;: 0&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; const vnode = {&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; type,&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; props,&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; shapeFlag,&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; // 一些其他属性&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; }&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; // 标准化子节点，把不同数据类型的 children 转成数组或者文本类型&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &lt;/font&gt;&lt;font color=&quot;#cc0066&quot;&gt;normalizeChildren&lt;/font&gt;&lt;font color=&quot;#000000&quot;&gt;(vnode, children)&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; return vnode&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#000000&quot;&gt;}&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="1445" y="380" width="390" height="380" as="geometry" />
        </mxCell>
        <mxCell id="p2N06ffcsC0MJF7vxpci-126" value="" style="endArrow=classic;html=1;rounded=0;fontColor=#000000;jumpSize=4;exitX=0.5;exitY=1;exitDx=0;exitDy=0;" edge="1" parent="1" source="p2N06ffcsC0MJF7vxpci-107">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="1639.99" y="355" as="sourcePoint" />
            <mxPoint x="1639.5" y="380" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="p2N06ffcsC0MJF7vxpci-127" value="&lt;div&gt;&lt;b style=&quot;background-color: initial;&quot;&gt;&lt;font color=&quot;#000000&quot;&gt;const render = (vnode, container) =&amp;gt; {&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; if (vnode == null) {&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp;&lt;/font&gt;&lt;font color=&quot;#0000ff&quot;&gt; // 销毁组件&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; if (container._vnode) {&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/font&gt;&lt;font color=&quot;#cc0066&quot;&gt;unmount&lt;/font&gt;&lt;font color=&quot;#000000&quot;&gt;(container._vnode, null, null, true)&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; }&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; } else {&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &lt;/font&gt;&lt;font color=&quot;#0000ff&quot;&gt;&amp;nbsp; // 创建或者更新组件&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; &amp;nbsp; &lt;/font&gt;&lt;font color=&quot;#cc0066&quot;&gt;patch(container._vnode || null, vnode, container)&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; }&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; // 缓存 vnode 节点，表示已经渲染&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#000000&quot;&gt;&amp;nbsp; container._vnode = vnode&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#000000&quot;&gt;&lt;br&gt;&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;font color=&quot;#000000&quot;&gt;}&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;fillColor=#fff2cc;strokeColor=#d6b656;" vertex="1" parent="1">
          <mxGeometry x="1447.5" y="815" width="387.5" height="240" as="geometry" />
        </mxCell>
        <mxCell id="p2N06ffcsC0MJF7vxpci-128" value="" style="endArrow=classic;html=1;rounded=0;fontColor=#000000;jumpSize=4;" edge="1" parent="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="1640" y="762" as="sourcePoint" />
            <mxPoint x="1640.3676470588234" y="812" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="p2N06ffcsC0MJF7vxpci-129" value="&lt;div&gt;&lt;b&gt;const patch = (n1, n2, container, anchor = null, parentComponent = null,...) =&amp;gt; {&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &lt;font color=&quot;#0000ff&quot;&gt;// 如果存在新旧节点, 且新旧节点类型不同，则销毁旧节点&lt;/font&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; if (n1 &amp;amp;&amp;amp; !isSameVNodeType(n1, n2)) {&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; anchor = getNextHostNode(n1)&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; unmount(n1, parentComponent, parentSuspense, true)&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; n1 = null&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; }&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; const { type, shapeFlag } = n2&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; switch (type) {&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; case Text:&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; break&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; case Comment:&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; break&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; case Static:&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; // 处理静态节点&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; break&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; case Fragment:&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; // 处理 Fragment 元素&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; break&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; default:&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; if (shapeFlag &amp;amp; 1 /* ELEMENT */) {&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 处理普通 DOM 元素&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;font color=&quot;#cc0066&quot;&gt;processElement&lt;/font&gt;(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized)&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; else if (shapeFlag &amp;amp; 6 /* COMPONENT */) {&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 处理组件&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;font color=&quot;#cc0066&quot;&gt;processComponent&lt;/font&gt;(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized)&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; else if (shapeFlag &amp;amp; 64 /* TELEPORT */) {&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 处理 TELEPORT&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; else if (shapeFlag &amp;amp; 128 /* SUSPENSE */) {&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // 处理 SUSPENSE&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; }&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;}&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#e1d5e7;strokeColor=#9673a6;align=left;" vertex="1" parent="1">
          <mxGeometry x="710" y="400" width="650" height="570" as="geometry" />
        </mxCell>
        <mxCell id="p2N06ffcsC0MJF7vxpci-130" value="" style="endArrow=classic;html=1;rounded=0;fontColor=#0000FF;jumpSize=4;exitX=0.779;exitY=0.557;exitDx=0;exitDy=0;exitPerimeter=0;" edge="1" parent="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="1445.83" y="865.77" as="sourcePoint" />
            <mxPoint x="1360" y="866" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="p2N06ffcsC0MJF7vxpci-131" value="&lt;font color=&quot;#cc0000&quot;&gt;&lt;b&gt;patch&lt;/b&gt;&lt;/font&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;fontColor=#CC0066;" vertex="1" parent="1">
          <mxGeometry x="1372" y="836" width="60" height="30" as="geometry" />
        </mxCell>
        <mxCell id="p2N06ffcsC0MJF7vxpci-132" value="&lt;div&gt;&lt;b&gt;const processComponent = (n1, n2, container, anchor, parentComponent, ...) =&amp;gt; {&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; if (n1 == null) {&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp;// 挂载组件&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp;mountComponent(n2, container, anchor, parentComponent, ...)&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; }&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; else {&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; // 更新组件&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; &amp;nbsp; updateComponent(n1, n2, parentComponent, optimized)&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp; }&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;}&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#fff2cc;strokeColor=#d6b656;align=left;" vertex="1" parent="1">
          <mxGeometry x="710" y="1100" width="460" height="220" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
